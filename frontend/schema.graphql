"""
A scalar that can represent any JSON Object value.
"""
scalar JSONObject

"""
Information about pagination in a connection
"""
type PageInfo {
	"""
	When paginating backwards, are there more items?
	"""
	hasPreviousPage: Boolean!
	"""
	When paginating forwards, are there more items?
	"""
	hasNextPage: Boolean!
	"""
	When paginating backwards, the cursor to continue.
	"""
	startCursor: String
	"""
	When paginating forwards, the cursor to continue.
	"""
	endCursor: String
}

type PaginationInfo {
	totalNodes: Int!
	pageSize: Int!
}

type Protocol {
	id: ID!
	name: String!
	scope: String!
	repositoryUrl: String
	publishedDate: Int!
	version: String!
	readme: String
	source: String
	description: String
	transactions: [Tx!]!
}

type ProtocolConnection {
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	A list of edges.
	"""
	edges: [ProtocolEdge!]!
	"""
	A list of nodes.
	"""
	nodes: [Protocol!]!
	metadata: PaginationInfo
}

"""
An edge in a connection.
"""
type ProtocolEdge {
	"""
	The item at the end of the edge
	"""
	node: Protocol!
	"""
	A cursor for use in pagination
	"""
	cursor: String!
}

enum ProtocolSort {
	ALPHABETIC_ASC
	ALPHABETIC_DSC
	UPDATE_TIME
	RELEVANCE
	DOWNLOADS
}

type Query {
	protocols(pageSize: Int, offset: Int, search: String, sortBy: ProtocolSort): ProtocolConnection!
	protocol(scope: String!, name: String!): Protocol
}

type Tx {
	name: String!
	parameters: JSONObject!
	tir: String!
	tirVersion: String!
}

"""
Directs the executor to include this field or fragment only when the `if` argument is true.
"""
directive @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
"""
Directs the executor to skip this field or fragment when the `if` argument is true.
"""
directive @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
schema {
	query: Query
}
